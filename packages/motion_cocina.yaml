# ===========================================================
#  COCINA — CONTROL POR MOVIMIENTO (v1.1.2, robusta YAML)
#  - Estrategias por franja: scene / script / fallback
#  - Timers: apagado_cocina / preaviso_cocina
#  - Snapshot flag: input_boolean.cocina_snapshot_ready
#  - Preaviso: brillo ABSOLUTO configurable (piso 10%)
#  - 2 automatizaciones: detected / clear
#  - Ajustá:
#      * binary_sensor.motion_cocina
#      * area_id_cocina: "cocina"
# ===========================================================

homeassistant:
  customize: {}

# ------------------------
# HELPERS
# ------------------------
input_boolean:
  cocina_snapshot_ready:
    name: Cocina - Snapshot listo
    icon: mdi:camera-burst

input_number:
  cocina_off_manana:
    name: Cocina - Apagado mañana (min)
    min: 1
    max: 180
    step: 1
    unit_of_measurement: min
    initial: 10
  cocina_off_mediodia:
    name: Cocina - Apagado mediodía (min)
    min: 1
    max: 180
    step: 1
    unit_of_measurement: min
    initial: 10
  cocina_off_tarde:
    name: Cocina - Apagado tarde (min)
    min: 1
    max: 180
    step: 1
    unit_of_measurement: min
    initial: 10
  cocina_off_noche:
    name: Cocina - Apagado noche (min)
    min: 1
    max: 180
    step: 1
    unit_of_measurement: min
    initial: 8
  cocina_off_madrugada:
    name: Cocina - Apagado madrugada (min)
    min: 1
    max: 180
    step: 1
    unit_of_measurement: min
    initial: 5

  cocina_preaviso:
    name: Cocina - Preaviso (min)
    min: 1
    max: 30
    step: 1
    unit_of_measurement: min
    initial: 2

  cocina_fallback_manana:
    name: Cocina - Fallback (mañana) %
    min: 1
    max: 100
    step: 1
    unit_of_measurement: '%'
    initial: 70
  cocina_fallback_mediodia:
    name: Cocina - Fallback (mediodía) %
    min: 1
    max: 100
    step: 1
    unit_of_measurement: '%'
    initial: 70
  cocina_fallback_tarde:
    name: Cocina - Fallback (tarde) %
    min: 1
    max: 100
    step: 1
    unit_of_measurement: '%'
    initial: 60
  cocina_fallback_noche:
    name: Cocina - Fallback (noche) %
    min: 1
    max: 100
    step: 1
    unit_of_measurement: '%'
    initial: 60
  cocina_fallback_madrugada:
    name: Cocina - Fallback (madrugada) %
    min: 1
    max: 100
    step: 1
    unit_of_measurement: '%'
    initial: 30

  # Brillo objetivo ABSOLUTO para el PREAVISO
  cocina_preaviso_target_pct:
    name: Cocina - Preaviso: brillo objetivo (%)
    min: 1
    max: 100
    step: 1
    unit_of_measurement: '%'
    initial: 50

# Escenas por franja (opcionales). Se usan si strategy = scene
input_text:
  cocina_scene_manana:
    name: Cocina - Escena (mañana)
    icon: mdi:white-balance-sunny
    max: 255
    initial: ""
  cocina_scene_mediodia:
    name: Cocina - Escena (mediodía)
    icon: mdi:weather-sunny
    max: 255
    initial: ""
  cocina_scene_tarde:
    name: Cocina - Escena (tarde)
    icon: mdi:weather-sunset
    max: 255
    initial: ""
  cocina_scene_noche:
    name: Cocina - Escena (noche)
    icon: mdi:weather-night
    max: 255
    initial: ""
  cocina_scene_madrugada:
    name: Cocina - Escena (madrugada)
    icon: mdi:weather-night
    max: 255
    initial: ""

  # Scripts por franja (opcionales). Se usan si strategy = script
  cocina_script_manana:
    name: Cocina - Script (mañana)
    icon: mdi:script-text
    max: 255
    initial: ""
  cocina_script_mediodia:
    name: Cocina - Script (mediodía)
    icon: mdi:script-text
    max: 255
    initial: ""
  cocina_script_tarde:
    name: Cocina - Script (tarde)
    icon: mdi:script-text
    max: 255
    initial: ""
  cocina_script_noche:
    name: Cocina - Script (noche)
    icon: mdi:script-text
    max: 255
    initial: ""
  cocina_script_madrugada:
    name: Cocina - Script (madrugada)
    icon: mdi:script-text
    max: 255
    initial: ""

# Estrategia por franja (elige UNA): scene / fallback / script
input_select:
  cocina_strategy_manana:
    name: Cocina - Estrategia (mañana)
    options:
      - scene
      - fallback
      - script
    initial: fallback
  cocina_strategy_mediodia:
    name: Cocina - Estrategia (mediodía)
    options:
      - scene
      - fallback
      - script
    initial: fallback
  cocina_strategy_tarde:
    name: Cocina - Estrategia (tarde)
    options:
      - scene
      - fallback
      - script
    initial: fallback
  cocina_strategy_noche:
    name: Cocina - Estrategia (noche)
    options:
      - scene
      - fallback
      - script
    initial: fallback
  cocina_strategy_madrugada:
    name: Cocina - Estrategia (madrugada)
    options:
      - scene
      - fallback
      - script
    initial: fallback

# Temporizadores
timer:
  apagado_cocina:
    name: Apagado total - Cocina
    restore: true
  preaviso_cocina:
    name: Preaviso - Cocina
    restore: true

# ------------------------
# AUTOMATIZACIONES
# ------------------------
automation:
  # ========== DETECTED ==========
  - id: cocina_motion_detected_v1_1_2
    alias: Cocina - motion - detected (v1.1.2)
    mode: single
    trigger:
      - platform: state
        entity_id: binary_sensor.motion_cocina
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.mantener_luces
        state: "off"
    variables:
      parte: >-
        {{ states('sensor.parte_del_dia') | lower
           | replace('á','a') | replace('é','e') | replace('í','i')
           | replace('ó','o') | replace('ú','u') }}
      area_id_cocina: "cocina"
      luces_area: >-
        {{ expand(area_entities(area_id_cocina))
           | selectattr('entity_id','search','^light\\.')
           | map(attribute='entity_id') | list }}

      # Estrategia según parte del día (sin mapas embebidos)
      strategy: >-
        {% set p = parte %}
        {% if p == 'manana' %}{{ states('input_select.cocina_strategy_manana')|lower }}
        {% elif p == 'mediodia' %}{{ states('input_select.cocina_strategy_mediodia')|lower }}
        {% elif p == 'tarde' %}{{ states('input_select.cocina_strategy_tarde')|lower }}
        {% elif p == 'noche' %}{{ states('input_select.cocina_strategy_noche')|lower }}
        {% elif p == 'madrugada' %}{{ states('input_select.cocina_strategy_madrugada')|lower }}
        {% else %}fallback{% endif %}

      fb_pct: >-
        {% set p = parte %}
        {% if p == 'manana' %}{{ states('input_number.cocina_fallback_manana')|int }}
        {% elif p == 'mediodia' %}{{ states('input_number.cocina_fallback_mediodia')|int }}
        {% elif p == 'tarde' %}{{ states('input_number.cocina_fallback_tarde')|int }}
        {% elif p == 'noche' %}{{ states('input_number.cocina_fallback_noche')|int }}
        {% elif p == 'madrugada' %}{{ states('input_number.cocina_fallback_madrugada')|int }}
        {% else %}60{% endif %}

      scene_entity: >-
        {% set p = parte %}
        {% set s = (
          states('input_text.cocina_scene_manana') if p == 'manana' else
          states('input_text.cocina_scene_mediodia') if p == 'mediodia' else
          states('input_text.cocina_scene_tarde') if p == 'tarde' else
          states('input_text.cocina_scene_noche') if p == 'noche' else
          states('input_text.cocina_scene_madrugada') if p == 'madrugada' else
          ''
        ) %}
        {{ s if s not in ['unknown','unavailable','', None] else '' }}

      script_entity: >-
        {% set p = parte %}
        {% set s = (
          states('input_text.cocina_script_manana') if p == 'manana' else
          states('input_text.cocina_script_mediodia') if p == 'mediodia' else
          states('input_text.cocina_script_tarde') if p == 'tarde' else
          states('input_text.cocina_script_noche') if p == 'noche' else
          states('input_text.cocina_script_madrugada') if p == 'madrugada' else
          ''
        ) %}
        {{ s if s not in ['unknown','unavailable','', None] else '' }}

    action:
      - service: timer.cancel
        target:
          entity_id:
            - timer.apagado_cocina
            - timer.preaviso_cocina

      - choose:
          - conditions: "{{ strategy == 'script' }}"
            sequence:
              - choose:
                  - conditions: "{{ script_entity != '' }}"
                    sequence:
                      - service: script.turn_on
                        data:
                          entity_id: "{{ script_entity }}"
                      - service: input_boolean.turn_off
                        target:
                          entity_id: input_boolean.cocina_snapshot_ready
                default:
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: input_boolean.cocina_snapshot_ready
                            state: "on"
                        sequence:
                          - service: scene.turn_on
                            data:
                              entity_id: scene.cocina_snapshot
                          - service: input_boolean.turn_off
                            target:
                              entity_id: input_boolean.cocina_snapshot_ready
                    default:
                      - service: light.turn_on
                        data:
                          entity_id: "{{ luces_area | join(', ') }}"
                          brightness_pct: "{{ fb_pct }}"

          - conditions: "{{ strategy == 'scene' }}"
            sequence:
              - choose:
                  - conditions: "{{ scene_entity != '' }}"
                    sequence:
                      - service: scene.turn_on
                        data:
                          entity_id: "{{ scene_entity }}"
                      - service: input_boolean.turn_off
                        target:
                          entity_id: input_boolean.cocina_snapshot_ready
                default:
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: input_boolean.cocina_snapshot_ready
                            state: "on"
                        sequence:
                          - service: scene.turn_on
                            data:
                              entity_id: scene.cocina_snapshot
                          - service: input_boolean.turn_off
                            target:
                              entity_id: input_boolean.cocina_snapshot_ready
                    default:
                      - service: light.turn_on
                        data:
                          entity_id: "{{ luces_area | join(', ') }}"
                          brightness_pct: "{{ fb_pct }}"

          - conditions: []
            sequence:
              - choose:
                  - conditions:
                      - condition: state
                        entity_id: input_boolean.cocina_snapshot_ready
                        state: "on"
                    sequence:
                      - service: scene.turn_on
                        data:
                          entity_id: scene.cocina_snapshot
                      - service: input_boolean.turn_off
                        target:
                          entity_id: input_boolean.cocina_snapshot_ready
                default:
                  - service: light.turn_on
                    data:
                      entity_id: "{{ luces_area | join(', ') }}"
                      brightness_pct: "{{ fb_pct }}"

  # ========== CLEAR ==========
  - id: cocina_motion_clear_v1_1_2
    alias: Cocina - motion - clear (v1.1.2)
    mode: restart
    trigger:
      - platform: state
        entity_id: binary_sensor.motion_cocina
        to: "off"
        for: "00:00:05"
    condition:
      - condition: state
        entity_id: input_boolean.mantener_luces
        state: "off"
    variables:
      parte: >-
        {{ states('sensor.parte_del_dia') | lower
           | replace('á','a') | replace('é','e') | replace('í','i')
           | replace('ó','o') | replace('ú','u') }}
      total_min: >-
        {% set p = parte %}
        {% if p == 'manana' %}{{ states('input_number.cocina_off_manana')|int }}
        {% elif p == 'mediodia' %}{{ states('input_number.cocina_off_mediodia')|int }}
        {% elif p == 'tarde' %}{{ states('input_number.cocina_off_tarde')|int }}
        {% elif p == 'noche' %}{{ states('input_number.cocina_off_noche')|int }}
        {% elif p == 'madrugada' %}{{ states('input_number.cocina_off_madrugada')|int }}
        {% else %}{{ states('input_number.cocina_off_noche')|int }}{% endif %}
      preaviso_min: "{{ states('input_number.cocina_preaviso') | int }}"
      total_seg: "{{ (total_min | int) * 60 }}"
      preaviso_seg: "{{ (preaviso_min | int) * 60 }}"
      espera_preaviso_s: "{{ [ (total_seg | int) - (preaviso_seg | int), 0 ] | max }}"
      dur_total: "00:{{ '%02d'|format(total_min | int) }}:00"
      dur_preaviso: "00:{{ '%02d'|format(preaviso_min | int) }}:00"

      preaviso_target_pct: "{{ states('input_number.cocina_preaviso_target_pct') | int(50) }}"

      area_id_cocina: "cocina"
      luces_area: >-
        {{ expand(area_entities(area_id_cocina))
           | selectattr('entity_id','search','^light\\.')
           | map(attribute='entity_id') | list }}
    action:
      - service: timer.start
        target:
          entity_id: timer.apagado_cocina
        data:
          duration: "{{ dur_total }}"

      - wait_for_trigger:
          - platform: state
            entity_id: binary_sensor.motion_cocina
            to: "on"
        timeout:
          seconds: "{{ espera_preaviso_s | int }}"
        continue_on_timeout: true

      - choose:
          - conditions: "{{ wait.trigger is not none }}"
            sequence:
              - service: timer.cancel
                target:
                  entity_id:
                    - timer.apagado_cocina
                    - timer.preaviso_cocina
              - stop: "Movimiento volvió antes del preaviso."

        default:
          - choose:
              - conditions: >-
                  {{ expand(luces_area) | selectattr('state','eq','on') | list | length > 0 }}
                sequence:
                  - service: scene.create
                    data:
                      scene_id: cocina_snapshot
                      snapshot_entities: "{{ luces_area }}"
                  - service: input_boolean.turn_on
                    target:
                      entity_id: input_boolean.cocina_snapshot_ready

          - variables:
              encendidas: >-
                {{ expand(luces_area)
                   | selectattr('state','eq','on')
                   | map(attribute='entity_id') | list }}
              target_preaviso: "{{ [ preaviso_target_pct | int, 10 ] | max }}"
          - if:
              - condition: template
                value_template: "{{ encendidas | length > 0 }}"
            then:
              - repeat:
                  for_each: "{{ encendidas }}"
                  sequence:
                    - service: light.turn_on
                      data:
                        entity_id: "{{ repeat.item }}"
                        brightness_pct: "{{ target_preaviso }}"

          - service: timer.start
            target:
              entity_id: timer.preaviso_cocina
            data:
              duration: "{{ dur_preaviso }}"

          - wait_for_trigger:
              - platform: state
                entity_id: binary_sensor.motion_cocina
                to: "on"
              - platform: event
                event_type: timer.finished
                event_data:
                  entity_id: timer.preaviso_cocina
            timeout: "{{ dur_total }}"
            continue_on_timeout: true

          - choose:
              - conditions: >-
                  {{ wait.trigger is not none and
                     (wait.trigger.platform == 'state' or
                      (wait.trigger.platform == 'event' and wait.trigger.event.data.entity_id == 'timer.preaviso_cocina' and 0)) }}
                sequence:
                  - service: timer.cancel
                    target:
                      entity_id:
                        - timer.preaviso_cocina
                        - timer.apagado_cocina
                  - choose:
                      - conditions:
                          - condition: state
                          entity_id: input_boolean.cocina_snapshot_ready
                          state: "on"
                        sequence:
                          - service: scene.turn_on
                            data:
                              entity_id: scene.cocina_snapshot
                  - service: input_boolean.turn_off
                    target:
                      entity_id: input_boolean.cocina_snapshot_ready
                  - stop: "Movimiento volvió durante el preaviso."

            default:
              - service: light.turn_off
                data:
                  entity_id: "{{ luces_area | join(', ') }}"
              - service: input_boolean.turn_off
                target:
                  entity_id: input_boolean.cocina_snapshot_ready
#x